---
- name: Install dependencies for Rust (Ubuntu)
  ansible.builtin.apt:
    name:
      - curl
      - build-essential
    state: present
  become: true
  when: ansible_os_family == "Debian"

- name: Install dependencies for Rust (macOS)
  community.general.homebrew:
    name:
      - curl
      - wget
  when: ansible_os_family == "Darwin"

- name: Check if Rust is already installed
  ansible.builtin.command: "rustc --version"
  register: rust_version_check
  ignore_errors: true
  changed_when: false

- name: Update Rust if installed
  when: rust_version_check.rc == 0
  block:
    - name: Update rustup to the latest version
      ansible.builtin.command: rustup self update
      register: rustup_update_result
      changed_when: "'Updated' in rustup_update_result.stdout"

    - name: Update Rust to the latest stable version
      ansible.builtin.command: rustup update {{ rust.version }}
      register: rust_update_result
      changed_when: "'updated' in rust_update_result.stdout"

    - name: Update installed Rust components
      ansible.builtin.command: rustup component add clippy rustfmt
      changed_when: false

- name: Install Rust if not installed
  when: rust_version_check.rc != 0
  block:
    - name: Download Rust installer script
      ansible.builtin.get_url:
        url: https://sh.rustup.rs
        dest: /tmp/rustup-init.sh
        mode: '0755'

    - name: Install Rust (Linux and macOS)
      ansible.builtin.command: /tmp/rustup-init.sh -y --default-toolchain {{ rust.version }}
      changed_when: false

