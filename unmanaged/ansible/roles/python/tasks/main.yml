---
- name: 'Install pyenv'
  git:
    repo: 'https://github.com/pyenv/pyenv'
    dest: "{{ pyenv_root }}"
- name: 'Install python build dependencies (Ubuntu)'
  become: true
  apt:
    name: "{{ python_dependencies_ubuntu }}"
  vars:
    python_dependencies_ubuntu:
      - 'make'
      - 'build-essential'
      - 'libssl-dev'
      - 'zlib1g-dev'
      - 'libbz2-dev'
      - 'libreadline-dev'
      - 'libsqlite3-dev'
      - 'wget'
      - 'curl'
      - 'llvm'
      - 'libncurses5-dev'
      - 'xz-utils'
      - 'tk-dev'
      - 'libxml2-dev'
      - 'libxmlsec1-dev'
      - 'libffi-dev'
      - 'liblzma-dev'
  tags:
    - 'update_deps'
  when:
    - ansible_facts['distribution'] == 'Ubuntu'
- name: 'Install python build dependencies (osx)'
  homebrew:
    name: "{{ python_dependencies_osx }}"
  vars:
    python_dependencies_osx:
      - 'openssl'
      - 'readline'
      - 'sqlite3'
      - 'xz'
      - 'zlib'
  tags:
    - 'update_deps'
  when:
    - ansible_facts['os_family'] == 'Darwin'
- name: 'Install pyenv'
  git:
    repo: 'https://github.com/pyenv/pyenv'
    dest: "{{ pyenv_root }}"
    update: true
  tags:
    - 'update_deps'
- name: 'Install pyenv-virtualenv'
  git:
    repo: 'https://github.com/pyenv/pyenv-virtualenv'
    dest: "{{ pyenv_plugins }}/pyenv-virtualenv"
    update: true
  tags:
    - 'update_deps'
- name: 'Install pyenv-doctor'
  git:
    repo: 'https://github.com/pyenv/pyenv-doctor'
    dest: "{{ pyenv_plugins }}/pyenv-doctor"
    update: true
- name: "Install python {{ python_version }}"
  shell: "{{ pyenv_bin }}/pyenv install --skip-existing {{ python_version }}"
- name: "Set python {{ python_version }} as a global"
  shell: "{{ pyenv_bin }}/pyenv global {{ python_version }}"
- name: "Check ansible installed"
  shell: 'type ansible'
  register: 'type_ansible_result'
- name: "Install ansible"
  shell: "{{ pip3_bin }} install ansible "
  when:
    - type_ansible_result.failed
